// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id String @id
  email String 
  authTokens AuthToken[]
  baselinePreference DataElementPreference[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AuthToken {
  id Int @id @default(autoincrement())
  token String
  isExpired Boolean @default(false)
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DataElementPreference {
  id String @id
  institutionType String
  consentState Int @default(-1)
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Study {
  id String @id
  title String
  purpose String
  piNames String
  sponsor String
  irbContent String
  irbApprovalDate String // 'YYYY-MM-DD'
  irbApprovedBy String
  institutionName String
  institutionType String
  // using binary to represent the 7 data elements:['demographic', 'generalClinical','biospecimen','genetic','mentalHealth','sexAndReproductive','familyHistory'];
  // the index of the element = the binary digit position
  // 1 = required; 0 = not required
  // e.g, if study requires 'demographic', 'biospecimen', 'genetic', 'familyHistory', the binary representation will be 1001101  
  requiredDataElements Int
  enrollmentDeadline String // 'YYYY-MM-DD'
  url String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}